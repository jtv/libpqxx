# Somebody decided it would be a good idea to represet a "list of strings"
# (a list that can get very long, and the indivdual strings tend to be
# relatively long as well) as a single long comma-separated string, with
# no tolerance for whitespace.  Well done!
#
# We use clever YAML multiline-string syntax to work around this.
Checks: >
    abseil-*,
    boost-*,
    bugprone-argument-comment,
    bugprone-assert-side-effect,
    bugprone-assignment-in-if-condition,
    bugprone-bad-signal-to-kill-thread,
    bugprone-bool-pointer-implicit-conversion,
    bugprone-copy-constructor-init,
    bugprone-dangling-handle,
    bugprone-dynamic-static-initializers,
    bugprone-fold-init-type,
    bugprone-forward-declaration-namespace,
    bugprone-forwarding-reference-overload,
    bugprone-implicit-widening-of-multiplication-result,
    bugprone-inaccurate-erase,
    bugprone-incorrect-roundings,
    bugprone-infinite-loop,
    bugprone-integer-division,
    bugprone-lambda-function-name,
    bugprone-macro-parentheses,
    bugprone-macro-repeated-side-effects,
    bugprone-misplaced-operator-in-strlen-in-alloc,
    bugprone-misplaced-pointer-arithmetic-in-alloc,
    bugprone-misplaced-widening-cast,
    bugprone-move-forwarding-reference,
    bugprone-multiple-statement-macro,
    bugprone-narrowing-conversions,
    bugprone-no-escape,
    bugprone-not-null-terminated-result,
    bugprone-parent-virtual-call,
    bugprone-posix-return,
    bugprone-redundant-branch-condition,
    bugprone-reserved-identifier,
    bugprone-shared-ptr-array-mismatch,
    bugprone-signal-handler,
    bugprone-signed-char-misuse,
    bugprone-sizeof-container,
    bugprone-sizeof-expression,
    bugprone-spuriously-wake-up-functions,
    bugprone-standalone-empty,
    bugprone-string-constructor,
    bugprone-string-integer-assignment,
    bugprone-string-literal-with-embedded-nul,
    bugprone-stringview-nullptr,
    bugprone-suspicious-enum-usage,
    bugprone-suspicious-include,
    bugprone-suspicious-memory-comparison,
    bugprone-suspicious-memset-usage,
    bugprone-suspicious-missing-comma,
    bugprone-suspicious-realloc-usage,
    bugprone-suspicious-semicolon,
    bugprone-suspicious-string-compare,
    bugprone-swapped-arguments,
    bugprone-terminating-continue,
    bugprone-throw-keyword-missing,
    bugprone-too-small-loop-variable,
    bugprone-unchecked-optional-access,
    bugprone-undefined-memory-manipulation,
    bugprone-undelegated-constructor,
    bugprone-unhandled-exception-at-new,
    bugprone-unhandled-self-assignment,
    bugprone-unused-raii,
    bugprone-unused-return-value,
    bugprone-use-after-move,
    bugprone-virtual-near-miss,
    cert-con36-c,
    cert-con54-cpp,
    cert-dcl03-c,
    cert-dcl16-c,
    cert-dcl37-c,
    cert-dcl50-cpp,
    cert-dcl51-cpp,
    cert-dcl54-cpp,
    cert-dcl58-cpp,
    cert-dcl59-cpp,
    cert-env33-c,
    cert-err09-cpp,
    cert-err33-c,
    cert-err34-c,
    cert-err52-cpp,
    cert-err58-cpp,
    cert-err60-cpp,
    cert-err61-cpp,
    cert-exp42-c,
    cert-fio38-c,
    cert-flp30-c,
    cert-flp37-c,
    cert-mem57-cpp,
    cert-msc30-c,
    cert-msc32-c,
    cert-msc50-cpp,
    cert-msc51-cpp,
    cert-msc54-cpp,
    cert-oop11-cpp,
    cert-oop54-cpp,
    cert-oop57-cpp,
    cert-oop58-cpp,
    cert-pos44-c,
    cert-pos47-c,
    cert-sig30-c,
    cert-str34-c,
    clang-analyzer-*,
    cppcoreguidelines-avoid-const-or-ref-data-members,
    cppcoreguidelines-avoid-goto,
    cppcoreguidelines-avoid-non-const-global-variables,
    cppcoreguidelines-avoid-reference-coroutine-parameters,
    cppcoreguidelines-c-copy-assignment-signature,
    cppcoreguidelines-explicit-virtual-functions,
    cppcoreguidelines-init-variables,
    cppcoreguidelines-interfaces-global-init,
    cppcoreguidelines-narrowing-conversions,
    cppcoreguidelines-no-malloc,
    cppcoreguidelines-non-private-member-variables-in-classes,
    cppcoreguidelines-owning-memory,
    cppcoreguidelines-prefer-member-initializer,
    cppcoreguidelines-pro-bounds-array-to-pointer-decay,
    cppcoreguidelines-pro-bounds-constant-array-index,
    cppcoreguidelines-pro-type-const-cast,
    cppcoreguidelines-pro-type-cstyle-cast,
    cppcoreguidelines-pro-type-member-init,
    cppcoreguidelines-pro-type-static-cast-downcast,
    cppcoreguidelines-pro-type-union-access,
    cppcoreguidelines-slicing,
    cppcoreguidelines-special-member-functions,
    cppcoreguidelines-virtual-class-destructor,
    darwin-dispatch-once-nonstatic,
    fuchsia-header-anon-namespaces,
    fuchsia-multiple-inheritance,
    fuchsia-trailing-return,
    fuchsia-virtual-inheritance,
    google-build-explicit-make-pair,
    google-build-namespaces,
    google-build-using-namespace,
    google-default-arguments,
    google-explicit-constructor,
    google-global-names-in-headers,
    google-readability-avoid-underscore-in-googletest-name,
    google-readability-function-size,
    google-readability-namespace-comments,
    google-runtime-operator,
    google-upgrade-googletest-case,
    hicpp-avoid-goto,
    hicpp-deprecated-headers,
    hicpp-exception-baseclass,
    hicpp-explicit-conversions,
    hicpp-function-size,
    hicpp-invalid-access-moved,
    hicpp-member-init,
    hicpp-multiway-paths-covered,
    hicpp-new-delete-operators,
    hicpp-no-array-decay,
    hicpp-no-assembler,
    hicpp-no-malloc,
    hicpp-special-member-functions,
    hicpp-undelegated-constructor,
    hicpp-use-auto,
    hicpp-use-emplace,
    hicpp-use-equals-default,
    hicpp-use-equals-delete,
    hicpp-use-noexcept,
    hicpp-use-nullptr,
    hicpp-use-override,
    llvm-header-guard,
    llvm-include-order,
    llvm-namespace-comment,
    llvm-prefer-isa-or-dyn-cast-in-conditionals,
    llvm-prefer-register-over-unsigned,
    llvm-twine-local,
    misc-confusable-identifiers,
    misc-const-correctness,
    misc-definitions-in-headers,
    misc-misleading-bidirectional,
    misc-misleading-identifier,
    misc-misplaced-const,
    misc-new-delete-overloads,
    misc-non-copyable-objects,
    misc-non-private-member-variables-in-classes,
    misc-redundant-expression,
    misc-throw-by-value-catch-by-reference,
    misc-unconventional-assign-operator,
    misc-uniqueptr-reset-release,
    misc-unused-alias-decls,
    misc-unused-parameters,
    misc-unused-using-decls,
    misc-use-anonymous-namespace,
    modernize-avoid-bind,
    modernize-concat-nested-namespaces,
    modernize-deprecated-headers,
    modernize-deprecated-ios-base-aliases,
    modernize-loop-convert,
    modernize-macro-to-enum,
    modernize-make-shared,
    modernize-make-unique,
    modernize-pass-by-value,
    modernize-raw-string-literal,
    modernize-redundant-void-arg,
    modernize-replace-auto-ptr,
    modernize-replace-disallow-copy-and-assign-macro,
    modernize-replace-random-shuffle,
    modernize-return-braced-init-list,
    modernize-shrink-to-fit,
    modernize-unary-static-assert,
    modernize-use-auto,
    modernize-use-bool-literals,
    modernize-use-default-member-init,
    modernize-use-emplace,
    modernize-use-equals-default,
    modernize-use-equals-delete,
    modernize-use-nodiscard,
    modernize-use-noexcept,
    modernize-use-nullptr,
    modernize-use-override,
    modernize-use-transparent-functors,
    modernize-use-uncaught-exceptions,
    modernize-use-using,
    performance-faster-string-find,
    performance-for-range-copy,
    performance-implicit-conversion-in-loop,
    performance-inefficient-algorithm,
    performance-inefficient-string-concatenation,
    performance-inefficient-vector-operation,
    performance-move-const-arg,
    performance-move-constructor-init,
    performance-no-automatic-move,
    performance-no-int-to-ptr,
    performance-trivially-destructible,
    performance-type-promotion-in-math-fn,
    performance-unnecessary-copy-initialization,
    performance-unnecessary-value-param,
    portability-restrict-system-includes,
    portability-simd-intrinsics,
    portability-std-allocator-const,
    readability-avoid-const-params-in-decls,
    readability-const-return-type,
    readability-container-contains,
    readability-container-data-pointer,
    readability-container-size-empty,
    readability-delete-null-pointer,
    readability-function-size,
    readability-identifier-naming,
    readability-inconsistent-declaration-parameter-name,
    readability-misplaced-array-index,
    readability-non-const-parameter,
    readability-redundant-access-specifiers,
    readability-redundant-control-flow,
    readability-redundant-declaration,
    readability-redundant-function-ptr-dereference,
    readability-redundant-member-init,
    readability-redundant-preprocessor,
    readability-redundant-smartptr-get,
    readability-redundant-string-cstr,
    readability-redundant-string-init,
    readability-simplify-boolean-expr,
    readability-simplify-subscript-expr,
    readability-static-accessed-through-instance,
    readability-static-definition-in-anonymous-namespace,
    readability-string-compare,
    readability-suspicious-call-argument,
    readability-uniqueptr-delete-release,
    readability-use-anyofallof,
    zircon-temporary-objects

