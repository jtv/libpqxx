# CircleCI config for automated test builds triggered from Github.
---
version: 2.1

jobs:

  # Run tests against a Linux Docker image.
  test-linux:
    parameters:
      os:
        type: string
      cxx:
        type: string
      cxx_version:
        type: string
    docker:
      - image: << parameters.os >>
    # The resource_class feature allows configuring CPU and RAM resources for
    # each job.  Different resource classes are available for different
    # executors.
    # https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install
          command: "./tools/install-deps.sh << parameters.os >> >/tmp/vars.sh"
      - run:
          name: Autogen
          command: ". /tmp/vars.sh && ./autogen.sh"
      - run:
          name: Configure
          command: ". /tmp/vars.sh && ./configure \
                --enable-maintainer-mode --enable-audit \
                --enable-shared --disable-static \
                CXX=<< parameters.cxx >> \
                CXXFLAGS=\"-O1 -std=<< parameters.cxx_version >>\""
      - store_artifacts:
          path: config.log
      - run:
          name: Make
          command: make -j4
      - run:
          name: Start database
          command: ". /tmp/vars.sh && ./tools/run-test-postgres.sh"
      - store_artifacts:
          path: postgres.log
      - run:
          name: Test
          command: . /tmp/vars.sh && make -j4 check
      - store_artifacts:
          path: test-suite.log

  analyse:
    parameters:
      cxx_version:
        type: string
    docker:
      - image: debian:stable
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install
          command: "tools/install-deps.sh debian-lint >/tmp/vars.sh"
      - run:
          name: Prepare
          command: "SRC=\"$(pwd)\" && \
            mkdir -p /tmp/pqxx && \
            cd /tmp/pqxx && \
            . /tmp/vars.sh && \
            CXX=clang++ CXXFLAGS='-O0 \
              -std=<< parameters.cxx_version >>' cmake \"$SRC\""
      - run:
          name: Analyse
          command: "SRC=\"$(pwd)\" && \
            cd /tmp/pqxx && \
            . /tmp/vars.sh && \
            \"$SRC/tools/lint\" --full"

workflows:
  all-tests:
    jobs:
      - test-linux:
          matrix:
            parameters:
              os: ["archlinux", "debian", "fedora"]
              cxx: ["clang++", "g++"]
              cxx_version: ["c++20", "c++23", "c++26"]
      - analyse:
          matrix:
            parameters:
              # Running this for 3 C++ versions took too long for CircleCI.
              cxx_version: ["c++26"]
